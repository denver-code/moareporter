strings = {
    "ru": {
        "error_no_reply": "–ö–æ–º–∞–Ω–¥–æ–π –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.",
        "error_report_admin": "–ù–µ –≤—ã–π–¥–µ—Ç, –æ–Ω –∞–¥–º–∏–Ω, –µ–º—É –º–æ–∂–Ω–æ :)",
        "error_restrict_admin": "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",

        "report_date_format": "%d.%m.%Y –≤ %H:%M",
        "report_message": 'üëÜ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {time} (–≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ)\n'
                          '<a href="{msg_url}">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</a>',
        "report_note": "\n\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {note}",
        "report_sent": "<i>–ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º</i>",

        "action_del_msg": "–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ",
        "action_del_and_ban": "–£–¥–∞–ª–∏—Ç—å –∏ –∑–∞–±–∞–Ω–∏—Ç—å",

        "action_deleted": "\n\nüóë <b>–£–¥–∞–ª–µ–Ω–æ</b>",
        "action_deleted_banned": "\n\nüóë‚ùå <b>–£–¥–∞–ª–µ–Ω–æ, —é–∑–µ—Ä –∑–∞–±–∞–Ω–µ–Ω</b>",
        "action_deleted_partially": "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",

        "readonly_forever": "üôä <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º ¬´—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ¬ª –Ω–∞–≤—Å–µ–≥–¥–∞</i>",
        "readonly_temporary": "üôä <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º ¬´—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ¬ª –¥–æ {time} (–≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ)</i>",
        "nomedia_forever": "üñº <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –Ω–∞–≤—Å–µ–≥–¥–∞</i>",
        "nomedia_temporary": "üñº <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –¥–æ {time} (–≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ)</i>",

        "need_admins_attention": '–ê–¥–º–∏–Ω—ã, –≤ —á–∞—Ç–µ –Ω—É–∂–Ω–æ –≤–∞—à–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ!\n\n'
                                 '<a href="{msg_url}">–ü–µ—Ä–µ–π—Ç–∏ –∫ —á–∞—Ç—É</a>',
    },
}


def get_string(lang: str, key: str):
    lang = strings.get(lang)
    if not lang:
        if not strings.get("en"):
            raise KeyError(f'Neither "{lang}" nor "en" locales found')
        else:
            lang = strings.get("en")
    try:
        return lang[key]
    except KeyError:
        return strings.get("en").get(key, "ERR_NO_STRING")
